<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GST.Fake.Authentication.JwtBearer</name>
    </assembly>
    <members>
        <member name="T:GST.Fake.Builder.FakeJwtBearerAppBuilderExtensions">
            <summary>
            Extension methods to add OpenIdConnect Bearer authentication capabilities to an HTTP application pipeline.
            </summary>
        </member>
        <member name="M:GST.Fake.Builder.FakeJwtBearerAppBuilderExtensions.UseFakeJwtBearerAuthentication(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds the JwtBearerMiddleware middleware to the specified IApplicationBuilder, which enables Bearer token processing capabilities.
            This middleware understands appropriately
            formatted and secured tokens which appear in the request header. If the Options.AuthenticationMode is Active, the
            claims within the bearer token are added to the current request's IPrincipal User. If the Options.AuthenticationMode 
            is Passive, then the current request is not modified, but IAuthenticationManager AuthenticateAsync may be used at
            any time to obtain the claims from the request's bearer token.
            See also http://tools.ietf.org/html/rfc6749
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> to add the middleware to.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="M:GST.Fake.Builder.FakeJwtBearerAppBuilderExtensions.UseFakeJwtBearerAuthentication(Microsoft.AspNetCore.Builder.IApplicationBuilder,GST.Fake.Builder.FakeJwtBearerOptions)">
            <summary>
            Adds the JwtBearerMiddleware middleware to the specified IApplicationBuilder, which enables Bearer token processing capabilities.
            This middleware understands appropriately
            formatted and secured tokens which appear in the request header. If the Options.AuthenticationMode is Active, the
            claims within the bearer token are added to the current request's IPrincipal User. If the Options.AuthenticationMode 
            is Passive, then the current request is not modified, but IAuthenticationManager AuthenticateAsync may be used at
            any time to obtain the claims from the request's bearer token.
            See also http://tools.ietf.org/html/rfc6749
            </summary>
            <param name="app">The IApplicationBuilder to add the middleware to.</param>
            <param name="options">A JwtBearerOptions that specifies options for the middleware.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="T:GST.Fake.Builder.FakeJwtBearerOptions">
            <summary>
            Options class provides information needed to control Bearer Authentication middleware behavior
            </summary>
        </member>
        <member name="M:GST.Fake.Builder.FakeJwtBearerOptions.#ctor">
            <summary>
            Creates an instance of bearer authentication options with default values.
            </summary>
        </member>
        <member name="P:GST.Fake.Builder.FakeJwtBearerOptions.Challenge">
            <summary>
            Gets or sets the challenge to put in the "WWW-Authenticate" header.
            </summary>
        </member>
        <member name="T:GST.Fake.Authentication.JwtBearer.FakeJwtBearerDefaults">
            <summary>
            Default values used by bearer authentication.
            </summary>
        </member>
        <member name="F:GST.Fake.Authentication.JwtBearer.FakeJwtBearerDefaults.AuthenticationScheme">
            <summary>
            Default value for AuthenticationScheme property in the JwtBearerAuthenticationOptions
            </summary>
        </member>
        <member name="M:GST.Fake.Authentication.JwtBearer.FakeJwtBearerHandler.HandleAuthenticateAsync">
            <summary>
            Searches the 'Authorization' header for a 'FakeBearer' token. If the 'FakeBearer' token is found, it is validated using TokenValidationParameters set in the options.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GST.Fake.Authentication.JwtBearer.FakeJwtBearerMiddleware">
            <summary>
            Bearer authentication middleware component which is added to an HTTP pipeline. This class is not
            created by application code directly, instead it is added by calling the the IAppBuilder UseJwtBearerAuthentication
            extension method.
            </summary>
        </member>
        <member name="M:GST.Fake.Authentication.JwtBearer.FakeJwtBearerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.Extensions.Options.IOptions{GST.Fake.Builder.FakeJwtBearerOptions})">
            <summary>
            Bearer authentication component which is added to an HTTP pipeline. This constructor is not
            called by application code directly, instead it is added by calling the the IAppBuilder UseJwtBearerAuthentication 
            extension method.
            </summary>
        </member>
        <member name="M:GST.Fake.Authentication.JwtBearer.FakeJwtBearerMiddleware.CreateHandler">
            <summary>
            Called by the AuthenticationMiddleware base class to create a per-request handler. 
            </summary>
            <returns>A new instance of the request handler</returns>
        </member>
        <member name="T:GST.Fake.Authentication.JwtBearer.HttpClientExtensions">
            <summary>
            Allow to set username, roles or anything useful for faking a user
            </summary>
        </member>
        <member name="M:GST.Fake.Authentication.JwtBearer.HttpClientExtensions.SetFakeBearerToken(System.Net.Http.HttpClient,System.Object)">
            <summary>
            Define a Token with a custom object
            </summary>
            <param name="client"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:GST.Fake.Authentication.JwtBearer.HttpClientExtensions.SetFakeBearerToken(System.Net.Http.HttpClient,System.String)">
            <summary>
            Define a Token with juste a Username
            </summary>
            <param name="client"></param>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:GST.Fake.Authentication.JwtBearer.HttpClientExtensions.SetFakeBearerToken(System.Net.Http.HttpClient,System.String,System.String[])">
            <summary>
            Define a Token with a Username and some roles
            </summary>
            <param name="client"></param>
            <param name="username"></param>
            <param name="roles"></param>
            <returns></returns>
        </member>
        <member name="M:GST.Fake.Authentication.JwtBearer.HttpClientExtensions.SetFakeBearerToken(System.Net.Http.HttpClient,System.String,System.String[],System.Object)">
            <summary>
            Define a Token with a Username and some roles and otherclaim
            </summary>
            <param name="client"></param>
            <param name="username"></param>
            <param name="roles"></param>
            <param name="claim"></param>
            <returns></returns>
        </member>
        <member name="M:GST.Fake.Authentication.JwtBearer.HttpClientExtensions.SetToken(System.Net.Http.HttpClient,System.String,System.String)">
            <summary>
            Set Raw Tocken
            </summary>
            <param name="client"></param>
            <param name="scheme"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
    </members>
</doc>
